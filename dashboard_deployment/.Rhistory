# running the above category function to all the category divs and appending the data to the jumia data frame
for(div in divs[c(2,4:23)]){
jumia= bind_rows(jumia,category(div))
}
# creating an empty data frame to save the data
jumia = tibble(  "Name"= character(),      # name column
"Price" =character(),             # price column
"Discount" =character(),          # discount column
"Category"= character())          # category column
# running the above category function to all the category divs and appending the data to the jumia data frame
for(div in divs[c(2,4:23)]){
jumia= bind_rows(jumia,category(div))
}
# running the above category function to all the category divs and appending the data to the jumia data frame
for(div in divs[c(2,4:23)]){
jumia= bind_rows(jumia,category(div))
}
div[2]
div[2]%>% html_node("img") %>%
html_attr("src") %>% html_text()
div[2]%>% html_node("img") %>%
html_attr("src")
div[2]%>% html_node("img") %>%html_nodes("div[class='itm col']") %>% html_attr("src")
div[2] %>%html_nodes("div[class='itm col']") %>% html_node("img") %>% html_attr("src")
div[2] %>% html_nodes("div[class='itm col']"
div[2] %>% html_nodes("div[class='itm col']")
div[2] %>% html_nodes("div[class='itm col']")
divs[2] %>% html_nodes("div[class='itm col']")
divs[2] %>% html_nodes("div[class='itm col']") %>% html_node("img") %>% html_attr("src")
divs[2] %>% html_nodes("div[class='itm col']") %>% html_node("img") %>% html_attr("src") %>% .[1]
# creating a function that extracts all the products information in a certain category
category = function(div){ # passing a div parameter
# assigning category as the div's title/header in the website
category = div  %>%html_nodes("h2") %>% html_text()  # text in the h2 tag
# if a category contains see all link
see_all_link = div %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
if (as.logical(length(see_all_link))){
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
new_page = read_html(url_)
products = new_page %>%
html_nodes("div[data-catalog='true']") %>%
html_nodes("article")
# scraping the various product attributes
name = products %>% html_node("h3[class='name']")%>%
html_text()
price = products %>% html_node("div[class='prc']") %>%
html_text()
discount = products %>%
html_node("div[class='bdg _dsct _sm']") %>% html_text()
image = products %>%
html_node("img") %>% html_attr("src")
}
else {
# selecting all items in that div
items = div  %>% html_nodes("div[class='itm col']")
name = items %>% html_node("div[class='name']") %>%
html_text() # all item names
price = items %>% html_node("div[class='prc']") %>%
html_text() # all item prices
discount = items %>% html_node("div[class='bdg _dsct']") %>%
html_text() #all item discounts
image = items %>% html_node("img") %>%
html_attr("src")
}
# returning a data frame of the extracted items
return(tibble( "Image" = image,
"Name"= name,
"Price" = price,
"Discount" = discount,
"Category"=  category))
}
# running the above category function to all the category divs and appending the data to the jumia data frame
for(div in divs[c(2,4:23)]){
jumia= bind_rows(jumia,category(div))
}
# previewing our data
head(jumia, n=10)
# converting the price and discount columns to integers
# In both columns we will replace all non numeric numbers with a blank
jumia = jumia %>%
mutate(Price = as.numeric(jumia$Price %>% stringr::str_sub(-8) %>%
stringr::str_replace_all(pattern="[^0-9]","") )
,
Discount= as.numeric(Discount %>%
stringr::str_replace_all(pattern="[^0-9]","")  ))
# previewing clean data
head(jumia)
# assigning zero to NAs in discount column
jumia$Discount[is.na(jumia$Discount)] = 0
# saving as csv
readr::write_csv(jumia,"./data/jumia_data.csv")
runApp('Mulei/Udemy Learning/R/Shiny_Dashboard.R')
runApp('Mulei/Udemy Learning/R/Shiny_Dashboard.R')
colnames(jumia)
runApp('Mulei/Udemy Learning/R/Shiny_Dashboard.R')
runApp('Mulei/Udemy Learning/R/Shiny_Dashboard.R')
runApp('Mulei/Udemy Learning/R/Shiny_Dashboard.R')
runApp('Mulei/Udemy Learning/R/Shiny_Dashboard.R')
install.packages('rsconnect')
rsconnect::setAccountInfo(name='sha-ddie',
token='52DF2066F50CC2A2907E3AF3B60425D6',
secret='US4aVnQsD0JlJYmvnuVnQs90DRxgwLnyfkfj4wYZ')
library(rsconnect)
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data/jumia_shinydashboard.R")
library(rsconnect)
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data")
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data")
rlang::last_trace()
rlang::last_trace(drop = FALSE)
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data/")
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data/jumia_shinydashboard.R")
rlang::last_trace()
getwd()
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data/jumia_shinydashboard.R")
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data/")
rsconnect::deployApp(appPrimaryDoc = "C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data/jumia_shinydashboard.R")
rsconnect::deployApp(appPrimaryDoc = 'jumia_shinydashboard.R')
rm(list = ls())
gc()
library(shiny); runApp('Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data/jumia_shinydashboard.R')
runApp('Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/data/jumia_shinydashboard.R')
# loading necessary packages
library(rvest)
library(dplyr)
library(httr)
url= "https://www.jumia.co.ke/"
# reading url
page = read_html(url)
# checking response
(httr::status_code(GET(url))) # its 200
# Extracting all category tabs that contain all the products
divs = page %>% html_nodes("div[class='col16 -pvs']") #saving to div variable
# creating an empty data frame to save the data
jumia = tibble(  "Name"= character(),      # name column
"Price" =character(),             # price column
"Discount" =character(),          # discount column
"Category"= character())          # category column
divs[2] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
see_all_link = divs[2] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
url_
new_page = read_html(url_)
new_page %>% html_node("a[arial-label='Next Page']")
new_page %>% html_node("a[aria-label='Next Page']")
new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr(href)
new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
divs[4] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
see_all_link = divs[4] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
new_page = read_html(url_)
new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
length(next_page_link)
while(length(next_page_link)){
print("1")
}
next_page_link
paste0(url, next_page_link %>%  stringr::str_extract( "([^/]+)/$") )
next_page_link
next_page_link %>%  stringr::str_extract( "([^/]+)/$")
next_page_link
next_page_link %>%  stringr::str_extract( "?([^/]+)/$")
next_page_link %>%  stringr::str_extract( "?([^/]+)$")
next_page_link %>%  stringr::str_extract( "/([^/]+)$")
next_page_link %>%  stringr::str_extract( "\\?([^/]+)$")
paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
next_page_link
(next_page_link)
paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
while(length(next_page_link)){
paste(next_page_link,"\n")
url_page = paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
new_page = read_html(url_page)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
}
next_page_link
see_all_link = divs[4] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
new_page = read_html(url_)
(next_page_link)
next_page_link
see_all_link = divs[4] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
see_all_link
paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
new_page = read_html(url_)
new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
next_page_link
paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
length(next_page_link)
while(length(next_page_link)){
print(next_page_link)
url_page = paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
new_page = read_html(url_page)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
}
url_
while(next_page_link!=NA){
print(next_page_link)
url_page = paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
new_page = read_html(url_page)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
}
if(next_page_link!=NA)
read_html("https://www.jumia.co.ke/mlp-top-deals/mlp-top-deals/?page=8#catalog-listing") %>%
html_node("a[aria-label='Next Page']") %>% html_attr("href")
next_page_link = read_html("https://www.jumia.co.ke/mlp-top-deals/mlp-top-deals/?page=8#catalog-listing") %>%
html_node("a[aria-label='Next Page']") %>% html_attr("href")
read_html("https://www.jumia.co.ke/mlp-top-deals/mlp-top-deals/?page=8#catalog-listing") %>%
html_node("a[aria-label='Next Page']") %>% html_attr("href")
next_page_link = read_html("https://www.jumia.co.ke/mlp-top-deals/mlp-top-deals/?page=8#catalog-listing") %>%
html_node("a[aria-label='Next Page']") %>% html_attr("href")
next_page_link
length(next_page_link)
is.na(next_page_link)
next_page_link = read_html("https://www.jumia.co.ke/mlp-top-deals/?page=7#catalog-listing") %>%
html_node("a[aria-label='Next Page']") %>% html_attr("href")
is.na(next_page_link)
!is.na(next_page_link)
see_all_link = divs[4] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
new_page = read_html(url_)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
(next_page_link)
paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
while(!is.na(next_page_link)){
print(next_page_link)
url_page = paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
new_page = read_html(url_page)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
}
see_all_link = divs[2] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
url_
new_page = read_html(url_)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
(next_page_link)
(next_page_link)
paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
while(!is.na(next_page_link)){
print(next_page_link)
url_page = paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
new_page = read_html(url_page)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
}
divs[6] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
see_all_link = divs[6] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
new_page = read_html(url_)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
(next_page_link)
paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
while(!is.na(next_page_link)){
print(next_page_link)
url_page = paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
new_page = read_html(url_page)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
}
next_page_link
see_all_link = divs[6] %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
new_page = read_html(url_)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
(next_page_link)
paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") )
new_page = read_html("https://www.jumia.co.ke/smartphones/?page=50#catalog-listing")
products = new_page %>% html_nodes("div[data-catalog='true']") %>%  html_nodes("article")
products %>% html_node("h3[class='name']")%>%
html_text()
runApp('Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/Shiny_Dashboard.R')
runApp('Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/Shiny_Dashboard.R')
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio")
runApp('Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/Shiny_Dashboard.R')
getwd
getwd()
setwd("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio)
"
)
setwd("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio")
getwd()
runApp('Shiny_Dashboard.R')
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/dashboard_deployment")
runApp('Shiny_Dashboard.R')
jumia %>% select(-Image)
jumia %>% select(-Image)
jumia
jumia=read.csv("./data/jumia_data.csv")
jumia
jumia %>% select(-Image)
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
jumia %>% filter( Name %>% stringr::str_like("%Phone%") )
jumia %>% filter( Name %>% stringr::str_like("%samsung Phone%")
)
jumia %>% filter( Name %>% stringr::str_like("%Samsung Phone%") )
jumia %>% filter( Name %>% stringr::str_like("%Samsung%") )
runApp('Shiny_Dashboard.R')
t= "phone"
jumia %>%
filter( Name %>% stringr::str_like("%",t,"%") )
t= "phone"
jumia %>%
filter( Name %>% stringr::str_like("%",t,"%") )
"%",t,"%"
paste("%",t,"%") )
paste("%",t,"%")
paste0("%",t,"%")
jumia %>%
filter( Name %>% stringr::str_like(paste0("%",t,"%") ) )
runApp('Shiny_Dashboard.R')
t= ""
jumia %>%
filter( Name %>% stringr::str_like( ifelse(t=="","% %",paste0("%",t,"%") ) ))
t= ""
jumia %>%
filter( Name %>% stringr::str_like( ifelse(t=="","% %",paste0("%",t,"%") ) ))
t= " "
jumia %>%
filter( Name %>% stringr::str_like( ifelse(t=="","% %",paste0("%",t,"%") ) ))
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
## app.R ##
install.packages("DT")
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
?DT::datatable
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
?DT::datatable
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
rm(list=ls())
# loading necessary packages
library(rvest)
library(dplyr)
library(httr)
url= "https://www.jumia.co.ke/"
# reading url
page = read_html(url)
# checking response
(httr::status_code(GET(url))) # its 200
# Extracting all category tabs that contain all the products
divs = page %>% html_nodes("div[class='col16 -pvs']") #saving to div variable
# creating an empty data frame to save the data
jumia = tibble(  "Name"= character(),      # name column
"Price" =character(),             # price column
"Discount" =character(),          # discount column
"Category"= character())          # category column
# creating a function that extracts all the products information in a certain category
category = function(div){ # passing a div parameter
# assigning category as the div's title/header in the website
category = div  %>%html_nodes("h2") %>% html_text()  # text in the h2 tag
# if a category contains see all link
see_all_link = div %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
if (length(see_all_link)){
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
new_page = read_html(url_)
products = new_page %>%
html_nodes("div[data-catalog='true']") %>%
html_nodes("article")
# scraping the various product attributes
name = products %>% html_node("h3[class='name']")%>%
html_text()
price = products %>% html_node("div[class='prc']") %>%
html_text()
discount = products %>%
html_node("div[class='bdg _dsct _sm']") %>% html_text()
# scarping the bottom pages in our new page of all categories
net_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
while(!is.na(next_page_link)) {
url_page = paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") ) # getting url for that page
new_page = read_html(url_page)                                                     #reading the page contents
products = new_page %>% html_nodes("div[data-catalog='true']") %>%  html_nodes("article")
# scraping all product from this page
name_ = products %>% html_node("h3[class='name']")%>%
html_text()
price_ = products %>% html_node("div[class='prc']") %>%
html_text()
discount_ = products %>%
html_node("div[class='bdg _dsct _sm']") %>% html_text()
name=c(name,name_); price=c(price,price_); discount=c(discount,discount_)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
}
}
else {
# selecting all items in that div
items = div  %>% html_nodes("div[class='itm col']")
name = items %>% html_node("div[class='name']") %>%
html_text() # all item names
price = items %>% html_node("div[class='prc']") %>%
html_text() # all item prices
discount = items %>% html_node("div[class='bdg _dsct']") %>%
html_text() #all item discounts
}
# returning a data frame of the extracted items
return(tibble( "Name"= name,
"Price" = price,
"Discount" = discount,
"Category"=  category))
}
# running the above category function to all the category divs and appending the data to the jumia data frame
for(div in divs[c(2,4:23)]){
jumia= bind_rows(jumia,category(div))
}
# running the above category function to all the category divs and appending the data to the jumia data frame
for(div in divs[c(2,4:23)]){
jumia= bind_rows(jumia,category(div))
}
net_page_link
# creating a function that extracts all the products information in a certain category
category = function(div){ # passing a div parameter
# assigning category as the div's title/header in the website
category = div  %>%html_nodes("h2") %>% html_text()  # text in the h2 tag
# if a category contains see all link
see_all_link = div %>% html_nodes("a[class='-df -i-ctr -upp -m -mls -pvxs']")%>% html_attr("href")
if (length(see_all_link)){
url_ = paste0(url,see_all_link %>%  stringr::str_extract( "([^/]+)/$") )
new_page = read_html(url_)
products = new_page %>%
html_nodes("div[data-catalog='true']") %>%
html_nodes("article")
# scraping the various product attributes
name = products %>% html_node("h3[class='name']")%>%
html_text()
price = products %>% html_node("div[class='prc']") %>%
html_text()
discount = products %>%
html_node("div[class='bdg _dsct _sm']") %>% html_text()
# scarping the bottom pages in our new page of all categories
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
while(!is.na(next_page_link)) {
url_page = paste0(url_, next_page_link %>%  stringr::str_extract( "\\?([^/]+)$") ) # getting url for that page
new_page = read_html(url_page)                                                     #reading the page contents
products = new_page %>% html_nodes("div[data-catalog='true']") %>%  html_nodes("article")
# scraping all product from this page
name_ = products %>% html_node("h3[class='name']")%>%
html_text()
price_ = products %>% html_node("div[class='prc']") %>%
html_text()
discount_ = products %>%
html_node("div[class='bdg _dsct _sm']") %>% html_text()
name=c(name,name_); price=c(price,price_); discount=c(discount,discount_)
next_page_link = new_page %>% html_node("a[aria-label='Next Page']") %>% html_attr("href")
}
}
else {
# selecting all items in that div
items = div  %>% html_nodes("div[class='itm col']")
name = items %>% html_node("div[class='name']") %>%
html_text() # all item names
price = items %>% html_node("div[class='prc']") %>%
html_text() # all item prices
discount = items %>% html_node("div[class='bdg _dsct']") %>%
html_text() #all item discounts
}
# returning a data frame of the extracted items
return(tibble( "Name"= name,
"Price" = price,
"Discount" = discount,
"Category"=  category))
}
# running the above category function to all the category divs and appending the data to the jumia data frame
for(div in divs[c(2,4:23)]){
jumia= bind_rows(jumia,category(div))
}
# previewing our data
head(jumia, n=10)
dim(jumia)
jumia %>%
mutate(Price = as.numeric(jumia$Price %>% stringr::str_sub(-8) %>%
stringr::str_replace_all(pattern="[^0-9]","") )
,
Discount= as.numeric(Discount %>%
stringr::str_replace_all(pattern="[^0-9]","")  ))
# converting the price and discount columns to integers
# In both columns we will replace all non numeric numbers with a blank
jumia = jumia %>%
mutate(Price = as.numeric(jumia$Price %>% stringr::str_sub(-8) %>%
stringr::str_replace_all(pattern="[^0-9]","") )
,
Discount= as.numeric(Discount %>%
stringr::str_replace_all(pattern="[^0-9]","")  ))
# previewing clean data
head(jumia)
# assigning zero to NAs in discount column
jumia$Discount[is.na(jumia$Discount)] = 0
# saving as csv
readr::write_csv(jumia,"./data/jumia_data.csv")
library(shiny); runApp('Shiny_Dashboard.R')
runApp('Shiny_Dashboard.R')
getwd()
rsconnect::deployApp("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/dashboard_deployment/")
runApp('dashboard_deployment/Shiny_Dashboard.R')
runApp('dashboard_deployment/Shiny_Dashboard.R')
getwd()
getwd()
setwd
setwd("C:/Users/User/Documents/Mulei/Udemy Learning/R/Projects/Jumia-Web-Scraping-RStudio/dashboard_deployment")
getwd()
rsconnect::deployApp()
getwd()
rsconnect::deployApp()
